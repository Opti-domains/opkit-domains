{
  "address": "0xcf8394C4E20Ae206E5973624154795dDa10893A6",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "domain",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "DomainRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "domain",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "StringRecordUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "domain",
          "type": "string"
        }
      ],
      "name": "getDomainOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "domain",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        }
      ],
      "name": "getStringRecord",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "domain",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string[]",
          "name": "keys",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "values",
          "type": "string[]"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "domain",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "updateStringRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8320e1781dd963fcbf1128992590cfa1d0a1a7039b7102a8e0a633ccdce52ae2",
  "receipt": {
    "to": null,
    "from": "0x8916e69Ebf9defa69f1ECA7F2abDa80B12c8c017",
    "contractAddress": "0xcf8394C4E20Ae206E5973624154795dDa10893A6",
    "transactionIndex": 1,
    "gasUsed": "636929",
    "logsBloom": "0x
    "blockHash": "0xa8c1ff60959cbeab4c7271b0fd7b88c00dd8dfdcd67960896584026756610b05",
    "transactionHash": "0x8320e1781dd963fcbf1128992590cfa1d0a1a7039b7102a8e0a633ccdce52ae2",
    "logs": [],
    "blockNumber": 582390,
    "cumulativeGasUsed": "683496",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "63f309c3180ec87665daa4bfc592774b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"DomainRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"StringRecordUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"}],\"name\":\"getDomainOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"getStringRecord\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"updateStringRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OpkitDomains.sol\":\"OpkitDomains\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OpkitDomains.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ncontract OpkitDomains {\\r\\n    // Domain struct to store the owner and the records\\r\\n    struct Domain {\\r\\n        address owner;\\r\\n        mapping(string => string) stringRecords;\\r\\n    }\\r\\n\\r\\n    // Mapping from domain name to Domain struct\\r\\n    mapping(string => Domain) private domains;\\r\\n\\r\\n    // Event emitted when a domain is registered\\r\\n    event DomainRegistered(string domain, address owner);\\r\\n\\r\\n    // Event emitted when a string record is updated\\r\\n    event StringRecordUpdated(string domain, string key, string newValue);\\r\\n\\r\\n    // Modifier to check if the sender is the owner of the domain\\r\\n    modifier onlyOwner(string memory domain) {\\r\\n        require(domains[domain].owner == msg.sender, \\\"Caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Function to register a new domain\\r\\n    function register(string memory domain, address owner, string[] memory keys, string[] memory values) public {\\r\\n        require(domains[domain].owner == address(0), \\\"Domain already registered\\\");\\r\\n        domains[domain].owner = owner;\\r\\n        emit DomainRegistered(domain, owner);\\r\\n\\r\\n        uint256 keysLength = keys.length;\\r\\n        require(keysLength == values.length, \\\"Not eq length\\\");\\r\\n\\r\\n        unchecked {\\r\\n            for (uint256 i = 0; i < keysLength; i++) {\\r\\n                domains[domain].stringRecords[keys[i]] = values[i];\\r\\n                emit StringRecordUpdated(domain, keys[i], values[i]);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Function to update the string record of an existing domain\\r\\n    function updateStringRecord(string memory domain, string memory key, string memory value) public onlyOwner(domain) {\\r\\n        domains[domain].stringRecords[key] = value;\\r\\n        emit StringRecordUpdated(domain, key, value);\\r\\n    }\\r\\n\\r\\n    // Function to get the string record of a domain\\r\\n    function getStringRecord(string memory domain, string memory key) public view returns (string memory) {\\r\\n        return domains[domain].stringRecords[key];\\r\\n    }\\r\\n\\r\\n    // Function to get the owner of a domain\\r\\n    function getDomainOwner(string memory domain) public view returns (address) {\\r\\n        return domains[domain].owner;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x6dca02f3bc2e39fdcd907679e8bdfbbdf9eb11dbb75b415e98569d244e346ad1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561000f575f80fd5b50610a8c8061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063259701151461004e578063b023136e1461007e578063c73e8ffa14610093578063ce51c204146100b3575b5f80fd5b61006161005c3660046105be565b6100c6565b6040516001600160a01b0390911681526020015b60405180910390f35b61009161008c366004610692565b6100f5565b005b6100a66100a1366004610734565b610335565b60405161007591906107e1565b6100916100c13660046107fa565b610402565b5f80826040516100d6919061087c565b908152604051908190036020019020546001600160a01b031692915050565b5f6001600160a01b03165f8560405161010e919061087c565b908152604051908190036020019020546001600160a01b0316146101795760405162461bcd60e51b815260206004820152601960248201527f446f6d61696e20616c726561647920726567697374657265640000000000000060448201526064015b60405180910390fd5b825f85604051610189919061087c565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a12906101e89086908690610897565b60405180910390a18151815181146102325760405162461bcd60e51b815260206004820152600d60248201526c09cdee840cae240d8cadccee8d609b1b6044820152606401610170565b5f5b8181101561032d5782818151811061024e5761024e6108c0565b60200260200101515f87604051610265919061087c565b9081526020016040518091039020600101858381518110610288576102886108c0565b602002602001015160405161029d919061087c565b908152602001604051809103902090816102b79190610958565b507f4583eb4638c096e9247b9f0290cbc957afa33e99b0c861aca45cdc56783935ec868583815181106102ec576102ec6108c0565b6020026020010151858481518110610306576103066108c0565b602002602001015160405161031d93929190610a14565b60405180910390a1600101610234565b505050505050565b60605f83604051610346919061087c565b908152602001604051809103902060010182604051610365919061087c565b9081526020016040518091039020805461037e906108d4565b80601f01602080910402602001604051908101604052809291908181526020018280546103aa906108d4565b80156103f55780601f106103cc576101008083540402835291602001916103f5565b820191905f5260205f20905b8154815290600101906020018083116103d857829003601f168201915b5050505050905092915050565b82336001600160a01b03165f8260405161041c919061087c565b908152604051908190036020019020546001600160a01b0316146104825760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e65720000000000000000006044820152606401610170565b815f85604051610492919061087c565b9081526020016040518091039020600101846040516104b1919061087c565b908152602001604051809103902090816104cb9190610958565b507f4583eb4638c096e9247b9f0290cbc957afa33e99b0c861aca45cdc56783935ec8484846040516104ff93929190610a14565b60405180910390a150505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561054a5761054a61050d565b604052919050565b5f82601f830112610561575f80fd5b813567ffffffffffffffff81111561057b5761057b61050d565b61058e601f8201601f1916602001610521565b8181528460208386010111156105a2575f80fd5b816020850160208301375f918101602001919091529392505050565b5f602082840312156105ce575f80fd5b813567ffffffffffffffff8111156105e4575f80fd5b6105f084828501610552565b949350505050565b5f82601f830112610607575f80fd5b8135602067ffffffffffffffff808311156106245761062461050d565b8260051b610633838201610521565b938452858101830193838101908886111561064c575f80fd5b84880192505b8583101561068657823584811115610668575f80fd5b6106768a87838c0101610552565b8352509184019190840190610652565b98975050505050505050565b5f805f80608085870312156106a5575f80fd5b843567ffffffffffffffff808211156106bc575f80fd5b6106c888838901610552565b9550602087013591506001600160a01b03821682146106e5575f80fd5b909350604086013590808211156106fa575f80fd5b610706888389016105f8565b9350606087013591508082111561071b575f80fd5b50610728878288016105f8565b91505092959194509250565b5f8060408385031215610745575f80fd5b823567ffffffffffffffff8082111561075c575f80fd5b61076886838701610552565b9350602085013591508082111561077d575f80fd5b5061078a85828601610552565b9150509250929050565b5f5b838110156107ae578181015183820152602001610796565b50505f910152565b5f81518084526107cd816020860160208601610794565b601f01601f19169290920160200192915050565b602081525f6107f360208301846107b6565b9392505050565b5f805f6060848603121561080c575f80fd5b833567ffffffffffffffff80821115610823575f80fd5b61082f87838801610552565b94506020860135915080821115610844575f80fd5b61085087838801610552565b93506040860135915080821115610865575f80fd5b5061087286828701610552565b9150509250925092565b5f825161088d818460208701610794565b9190910192915050565b604081525f6108a960408301856107b6565b905060018060a01b03831660208301529392505050565b634e487b7160e01b5f52603260045260245ffd5b600181811c908216806108e857607f821691505b60208210810361090657634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561095357805f5260205f20601f840160051c810160208510156109315750805b601f840160051c820191505b81811015610950575f815560010161093d565b50505b505050565b815167ffffffffffffffff8111156109725761097261050d565b6109868161098084546108d4565b8461090c565b602080601f8311600181146109b9575f84156109a25750858301515b5f19600386901b1c1916600185901b17855561032d565b5f85815260208120601f198616915b828110156109e7578886015182559484019460019091019084016109c8565b5085821015610a0457878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b606081525f610a2660608301866107b6565b8281036020840152610a3881866107b6565b90508281036040840152610a4c81856107b6565b969550505050505056fea264697066735822122020957fe077878594d37e208cca0d8252495cfada1d2e93070d2f410a67ca84d764736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063259701151461004e578063b023136e1461007e578063c73e8ffa14610093578063ce51c204146100b3575b5f80fd5b61006161005c3660046105be565b6100c6565b6040516001600160a01b0390911681526020015b60405180910390f35b61009161008c366004610692565b6100f5565b005b6100a66100a1366004610734565b610335565b60405161007591906107e1565b6100916100c13660046107fa565b610402565b5f80826040516100d6919061087c565b908152604051908190036020019020546001600160a01b031692915050565b5f6001600160a01b03165f8560405161010e919061087c565b908152604051908190036020019020546001600160a01b0316146101795760405162461bcd60e51b815260206004820152601960248201527f446f6d61696e20616c726561647920726567697374657265640000000000000060448201526064015b60405180910390fd5b825f85604051610189919061087c565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a12906101e89086908690610897565b60405180910390a18151815181146102325760405162461bcd60e51b815260206004820152600d60248201526c09cdee840cae240d8cadccee8d609b1b6044820152606401610170565b5f5b8181101561032d5782818151811061024e5761024e6108c0565b60200260200101515f87604051610265919061087c565b9081526020016040518091039020600101858381518110610288576102886108c0565b602002602001015160405161029d919061087c565b908152602001604051809103902090816102b79190610958565b507f4583eb4638c096e9247b9f0290cbc957afa33e99b0c861aca45cdc56783935ec868583815181106102ec576102ec6108c0565b6020026020010151858481518110610306576103066108c0565b602002602001015160405161031d93929190610a14565b60405180910390a1600101610234565b505050505050565b60605f83604051610346919061087c565b908152602001604051809103902060010182604051610365919061087c565b9081526020016040518091039020805461037e906108d4565b80601f01602080910402602001604051908101604052809291908181526020018280546103aa906108d4565b80156103f55780601f106103cc576101008083540402835291602001916103f5565b820191905f5260205f20905b8154815290600101906020018083116103d857829003601f168201915b5050505050905092915050565b82336001600160a01b03165f8260405161041c919061087c565b908152604051908190036020019020546001600160a01b0316146104825760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e65720000000000000000006044820152606401610170565b815f85604051610492919061087c565b9081526020016040518091039020600101846040516104b1919061087c565b908152602001604051809103902090816104cb9190610958565b507f4583eb4638c096e9247b9f0290cbc957afa33e99b0c861aca45cdc56783935ec8484846040516104ff93929190610a14565b60405180910390a150505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561054a5761054a61050d565b604052919050565b5f82601f830112610561575f80fd5b813567ffffffffffffffff81111561057b5761057b61050d565b61058e601f8201601f1916602001610521565b8181528460208386010111156105a2575f80fd5b816020850160208301375f918101602001919091529392505050565b5f602082840312156105ce575f80fd5b813567ffffffffffffffff8111156105e4575f80fd5b6105f084828501610552565b949350505050565b5f82601f830112610607575f80fd5b8135602067ffffffffffffffff808311156106245761062461050d565b8260051b610633838201610521565b938452858101830193838101908886111561064c575f80fd5b84880192505b8583101561068657823584811115610668575f80fd5b6106768a87838c0101610552565b8352509184019190840190610652565b98975050505050505050565b5f805f80608085870312156106a5575f80fd5b843567ffffffffffffffff808211156106bc575f80fd5b6106c888838901610552565b9550602087013591506001600160a01b03821682146106e5575f80fd5b909350604086013590808211156106fa575f80fd5b610706888389016105f8565b9350606087013591508082111561071b575f80fd5b50610728878288016105f8565b91505092959194509250565b5f8060408385031215610745575f80fd5b823567ffffffffffffffff8082111561075c575f80fd5b61076886838701610552565b9350602085013591508082111561077d575f80fd5b5061078a85828601610552565b9150509250929050565b5f5b838110156107ae578181015183820152602001610796565b50505f910152565b5f81518084526107cd816020860160208601610794565b601f01601f19169290920160200192915050565b602081525f6107f360208301846107b6565b9392505050565b5f805f6060848603121561080c575f80fd5b833567ffffffffffffffff80821115610823575f80fd5b61082f87838801610552565b94506020860135915080821115610844575f80fd5b61085087838801610552565b93506040860135915080821115610865575f80fd5b5061087286828701610552565b9150509250925092565b5f825161088d818460208701610794565b9190910192915050565b604081525f6108a960408301856107b6565b905060018060a01b03831660208301529392505050565b634e487b7160e01b5f52603260045260245ffd5b600181811c908216806108e857607f821691505b60208210810361090657634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561095357805f5260205f20601f840160051c810160208510156109315750805b601f840160051c820191505b81811015610950575f815560010161093d565b50505b505050565b815167ffffffffffffffff8111156109725761097261050d565b6109868161098084546108d4565b8461090c565b602080601f8311600181146109b9575f84156109a25750858301515b5f19600386901b1c1916600185901b17855561032d565b5f85815260208120601f198616915b828110156109e7578886015182559484019460019091019084016109c8565b5085821015610a0457878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b606081525f610a2660608301866107b6565b8281036020840152610a3881866107b6565b90508281036040840152610a4c81856107b6565b969550505050505056fea264697066735822122020957fe077878594d37e208cca0d8252495cfada1d2e93070d2f410a67ca84d764736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 92,
        "contract": "contracts/OpkitDomains.sol:OpkitDomains",
        "label": "domains",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Domain)87_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Domain)87_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct OpkitDomains.Domain)",
        "numberOfBytes": "32",
        "value": "t_struct(Domain)87_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Domain)87_storage": {
        "encoding": "inplace",
        "label": "struct OpkitDomains.Domain",
        "members": [
          {
            "astId": 82,
            "contract": "contracts/OpkitDomains.sol:OpkitDomains",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 86,
            "contract": "contracts/OpkitDomains.sol:OpkitDomains",
            "label": "stringRecords",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
          }
        ],
        "numberOfBytes": "64"
      }
    }
  }
}