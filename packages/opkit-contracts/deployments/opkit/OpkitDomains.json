{
  "address": "0x319D2E970d57D957f715c87b4736572Dd52B243B",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "domain",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "DomainRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "domain",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "StringRecordUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "domain",
          "type": "string"
        }
      ],
      "name": "getDomainOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "domain",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        }
      ],
      "name": "getStringRecord",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "domain",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string[]",
          "name": "keys",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "values",
          "type": "string[]"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "domain",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "updateStringRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9b8c20c0e99875bafebe5533efbf2b19a656814309230e988fe418d6cb42b319",
  "receipt": {
    "to": null,
    "from": "0x8916e69Ebf9defa69f1ECA7F2abDa80B12c8c017",
    "contractAddress": "0x319D2E970d57D957f715c87b4736572Dd52B243B",
    "transactionIndex": 1,
    "gasUsed": "676505",
    "logsBloom": "0x
    "blockHash": "0xaacfe5f82c195cdbd28cbe6c010f9901de7ad31761af9dc947170e346a068b10",
    "transactionHash": "0x9b8c20c0e99875bafebe5533efbf2b19a656814309230e988fe418d6cb42b319",
    "logs": [],
    "blockNumber": 588662,
    "cumulativeGasUsed": "720284",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "df485069504b94d36218f2a8e9bb7c03",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"DomainRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"StringRecordUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"}],\"name\":\"getDomainOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"getStringRecord\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"updateStringRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OpkitDomains.sol\":\"OpkitDomains\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OpkitDomains.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ncontract OpkitDomains {\\r\\n    // Domain struct to store the owner and the records\\r\\n    struct Domain {\\r\\n        address owner;\\r\\n        mapping(string => string) stringRecords;\\r\\n    }\\r\\n\\r\\n    // Mapping from domain name to Domain struct\\r\\n    mapping(string => Domain) private domains;\\r\\n\\r\\n    // Event emitted when a domain is registered\\r\\n    event DomainRegistered(string domain, address owner);\\r\\n\\r\\n    // Event emitted when a string record is updated\\r\\n    event StringRecordUpdated(string domain, string key, string newValue);\\r\\n\\r\\n    // Modifier to check if the sender is the owner of the domain\\r\\n    modifier onlyOwner(string memory domain) {\\r\\n        require(domains[domain].owner == msg.sender, \\\"Caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Function to register a new domain\\r\\n    function register(string memory domain, address owner, string[] memory keys, string[] memory values) public {\\r\\n        require(owner != address(0), \\\"Null address\\\");\\r\\n        require(domains[domain].owner == address(0) || domains[domain].owner == owner, \\\"Domain already registered\\\");\\r\\n\\r\\n        if (domains[domain].owner == address(0)) {\\r\\n            domains[domain].owner = owner;\\r\\n            emit DomainRegistered(domain, owner);\\r\\n        }\\r\\n\\r\\n        uint256 keysLength = keys.length;\\r\\n        require(keysLength == values.length, \\\"Not eq length\\\");\\r\\n\\r\\n        unchecked {\\r\\n            for (uint256 i = 0; i < keysLength; i++) {\\r\\n                domains[domain].stringRecords[keys[i]] = values[i];\\r\\n                emit StringRecordUpdated(domain, keys[i], values[i]);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Function to update the string record of an existing domain\\r\\n    function updateStringRecord(string memory domain, string memory key, string memory value) public onlyOwner(domain) {\\r\\n        domains[domain].stringRecords[key] = value;\\r\\n        emit StringRecordUpdated(domain, key, value);\\r\\n    }\\r\\n\\r\\n    // Function to get the string record of a domain\\r\\n    function getStringRecord(string memory domain, string memory key) public view returns (string memory) {\\r\\n        return domains[domain].stringRecords[key];\\r\\n    }\\r\\n\\r\\n    // Function to get the owner of a domain\\r\\n    function getDomainOwner(string memory domain) public view returns (address) {\\r\\n        return domains[domain].owner;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xfd6c2d9b4f8fcb601fee0667330b48641e558aee2d75fb6cbb4aee592c06634f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561000f575f80fd5b50610b438061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063259701151461004e578063b023136e1461007e578063c73e8ffa14610093578063ce51c204146100b3575b5f80fd5b61006161005c366004610675565b6100c6565b6040516001600160a01b0390911681526020015b60405180910390f35b61009161008c366004610749565b6100f5565b005b6100a66100a13660046107eb565b6103ec565b6040516100759190610898565b6100916100c13660046108b1565b6104b9565b5f80826040516100d69190610933565b908152604051908190036020019020546001600160a01b031692915050565b6001600160a01b03831661013f5760405162461bcd60e51b815260206004820152600c60248201526b4e756c6c206164647265737360a01b60448201526064015b60405180910390fd5b5f6001600160a01b03165f856040516101589190610933565b908152604051908190036020019020546001600160a01b031614806101ac5750826001600160a01b03165f856040516101919190610933565b908152604051908190036020019020546001600160a01b0316145b6101f85760405162461bcd60e51b815260206004820152601960248201527f446f6d61696e20616c72656164792072656769737465726564000000000000006044820152606401610136565b5f6001600160a01b03165f856040516102119190610933565b908152604051908190036020019020546001600160a01b0316036102a757825f8560405161023f9190610933565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a129061029e908690869061094e565b60405180910390a15b8151815181146102e95760405162461bcd60e51b815260206004820152600d60248201526c09cdee840cae240d8cadccee8d609b1b6044820152606401610136565b5f5b818110156103e45782818151811061030557610305610977565b60200260200101515f8760405161031c9190610933565b908152602001604051809103902060010185838151811061033f5761033f610977565b60200260200101516040516103549190610933565b9081526020016040518091039020908161036e9190610a0f565b507f4583eb4638c096e9247b9f0290cbc957afa33e99b0c861aca45cdc56783935ec868583815181106103a3576103a3610977565b60200260200101518584815181106103bd576103bd610977565b60200260200101516040516103d493929190610acb565b60405180910390a16001016102eb565b505050505050565b60605f836040516103fd9190610933565b90815260200160405180910390206001018260405161041c9190610933565b908152602001604051809103902080546104359061098b565b80601f01602080910402602001604051908101604052809291908181526020018280546104619061098b565b80156104ac5780601f10610483576101008083540402835291602001916104ac565b820191905f5260205f20905b81548152906001019060200180831161048f57829003601f168201915b5050505050905092915050565b82336001600160a01b03165f826040516104d39190610933565b908152604051908190036020019020546001600160a01b0316146105395760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e65720000000000000000006044820152606401610136565b815f856040516105499190610933565b9081526020016040518091039020600101846040516105689190610933565b908152602001604051809103902090816105829190610a0f565b507f4583eb4638c096e9247b9f0290cbc957afa33e99b0c861aca45cdc56783935ec8484846040516105b693929190610acb565b60405180910390a150505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610601576106016105c4565b604052919050565b5f82601f830112610618575f80fd5b813567ffffffffffffffff811115610632576106326105c4565b610645601f8201601f19166020016105d8565b818152846020838601011115610659575f80fd5b816020850160208301375f918101602001919091529392505050565b5f60208284031215610685575f80fd5b813567ffffffffffffffff81111561069b575f80fd5b6106a784828501610609565b949350505050565b5f82601f8301126106be575f80fd5b8135602067ffffffffffffffff808311156106db576106db6105c4565b8260051b6106ea8382016105d8565b9384528581018301938381019088861115610703575f80fd5b84880192505b8583101561073d5782358481111561071f575f80fd5b61072d8a87838c0101610609565b8352509184019190840190610709565b98975050505050505050565b5f805f806080858703121561075c575f80fd5b843567ffffffffffffffff80821115610773575f80fd5b61077f88838901610609565b9550602087013591506001600160a01b038216821461079c575f80fd5b909350604086013590808211156107b1575f80fd5b6107bd888389016106af565b935060608701359150808211156107d2575f80fd5b506107df878288016106af565b91505092959194509250565b5f80604083850312156107fc575f80fd5b823567ffffffffffffffff80821115610813575f80fd5b61081f86838701610609565b93506020850135915080821115610834575f80fd5b5061084185828601610609565b9150509250929050565b5f5b8381101561086557818101518382015260200161084d565b50505f910152565b5f815180845261088481602086016020860161084b565b601f01601f19169290920160200192915050565b602081525f6108aa602083018461086d565b9392505050565b5f805f606084860312156108c3575f80fd5b833567ffffffffffffffff808211156108da575f80fd5b6108e687838801610609565b945060208601359150808211156108fb575f80fd5b61090787838801610609565b9350604086013591508082111561091c575f80fd5b5061092986828701610609565b9150509250925092565b5f825161094481846020870161084b565b9190910192915050565b604081525f610960604083018561086d565b905060018060a01b03831660208301529392505050565b634e487b7160e01b5f52603260045260245ffd5b600181811c9082168061099f57607f821691505b6020821081036109bd57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610a0a57805f5260205f20601f840160051c810160208510156109e85750805b601f840160051c820191505b81811015610a07575f81556001016109f4565b50505b505050565b815167ffffffffffffffff811115610a2957610a296105c4565b610a3d81610a37845461098b565b846109c3565b602080601f831160018114610a70575f8415610a595750858301515b5f19600386901b1c1916600185901b1785556103e4565b5f85815260208120601f198616915b82811015610a9e57888601518255948401946001909101908401610a7f565b5085821015610abb57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b606081525f610add606083018661086d565b8281036020840152610aef818661086d565b90508281036040840152610b03818561086d565b969550505050505056fea26469706673582212203391509e28ccd6d037a97f7047b9e3e6dd7062f485908ed7f002b243764e2e2e64736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063259701151461004e578063b023136e1461007e578063c73e8ffa14610093578063ce51c204146100b3575b5f80fd5b61006161005c366004610675565b6100c6565b6040516001600160a01b0390911681526020015b60405180910390f35b61009161008c366004610749565b6100f5565b005b6100a66100a13660046107eb565b6103ec565b6040516100759190610898565b6100916100c13660046108b1565b6104b9565b5f80826040516100d69190610933565b908152604051908190036020019020546001600160a01b031692915050565b6001600160a01b03831661013f5760405162461bcd60e51b815260206004820152600c60248201526b4e756c6c206164647265737360a01b60448201526064015b60405180910390fd5b5f6001600160a01b03165f856040516101589190610933565b908152604051908190036020019020546001600160a01b031614806101ac5750826001600160a01b03165f856040516101919190610933565b908152604051908190036020019020546001600160a01b0316145b6101f85760405162461bcd60e51b815260206004820152601960248201527f446f6d61696e20616c72656164792072656769737465726564000000000000006044820152606401610136565b5f6001600160a01b03165f856040516102119190610933565b908152604051908190036020019020546001600160a01b0316036102a757825f8560405161023f9190610933565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f70f2ff07e8136617cdfb0433423063c9dd697c507560d7860cce09fa86874a129061029e908690869061094e565b60405180910390a15b8151815181146102e95760405162461bcd60e51b815260206004820152600d60248201526c09cdee840cae240d8cadccee8d609b1b6044820152606401610136565b5f5b818110156103e45782818151811061030557610305610977565b60200260200101515f8760405161031c9190610933565b908152602001604051809103902060010185838151811061033f5761033f610977565b60200260200101516040516103549190610933565b9081526020016040518091039020908161036e9190610a0f565b507f4583eb4638c096e9247b9f0290cbc957afa33e99b0c861aca45cdc56783935ec868583815181106103a3576103a3610977565b60200260200101518584815181106103bd576103bd610977565b60200260200101516040516103d493929190610acb565b60405180910390a16001016102eb565b505050505050565b60605f836040516103fd9190610933565b90815260200160405180910390206001018260405161041c9190610933565b908152602001604051809103902080546104359061098b565b80601f01602080910402602001604051908101604052809291908181526020018280546104619061098b565b80156104ac5780601f10610483576101008083540402835291602001916104ac565b820191905f5260205f20905b81548152906001019060200180831161048f57829003601f168201915b5050505050905092915050565b82336001600160a01b03165f826040516104d39190610933565b908152604051908190036020019020546001600160a01b0316146105395760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e65720000000000000000006044820152606401610136565b815f856040516105499190610933565b9081526020016040518091039020600101846040516105689190610933565b908152602001604051809103902090816105829190610a0f565b507f4583eb4638c096e9247b9f0290cbc957afa33e99b0c861aca45cdc56783935ec8484846040516105b693929190610acb565b60405180910390a150505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610601576106016105c4565b604052919050565b5f82601f830112610618575f80fd5b813567ffffffffffffffff811115610632576106326105c4565b610645601f8201601f19166020016105d8565b818152846020838601011115610659575f80fd5b816020850160208301375f918101602001919091529392505050565b5f60208284031215610685575f80fd5b813567ffffffffffffffff81111561069b575f80fd5b6106a784828501610609565b949350505050565b5f82601f8301126106be575f80fd5b8135602067ffffffffffffffff808311156106db576106db6105c4565b8260051b6106ea8382016105d8565b9384528581018301938381019088861115610703575f80fd5b84880192505b8583101561073d5782358481111561071f575f80fd5b61072d8a87838c0101610609565b8352509184019190840190610709565b98975050505050505050565b5f805f806080858703121561075c575f80fd5b843567ffffffffffffffff80821115610773575f80fd5b61077f88838901610609565b9550602087013591506001600160a01b038216821461079c575f80fd5b909350604086013590808211156107b1575f80fd5b6107bd888389016106af565b935060608701359150808211156107d2575f80fd5b506107df878288016106af565b91505092959194509250565b5f80604083850312156107fc575f80fd5b823567ffffffffffffffff80821115610813575f80fd5b61081f86838701610609565b93506020850135915080821115610834575f80fd5b5061084185828601610609565b9150509250929050565b5f5b8381101561086557818101518382015260200161084d565b50505f910152565b5f815180845261088481602086016020860161084b565b601f01601f19169290920160200192915050565b602081525f6108aa602083018461086d565b9392505050565b5f805f606084860312156108c3575f80fd5b833567ffffffffffffffff808211156108da575f80fd5b6108e687838801610609565b945060208601359150808211156108fb575f80fd5b61090787838801610609565b9350604086013591508082111561091c575f80fd5b5061092986828701610609565b9150509250925092565b5f825161094481846020870161084b565b9190910192915050565b604081525f610960604083018561086d565b905060018060a01b03831660208301529392505050565b634e487b7160e01b5f52603260045260245ffd5b600181811c9082168061099f57607f821691505b6020821081036109bd57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610a0a57805f5260205f20601f840160051c810160208510156109e85750805b601f840160051c820191505b81811015610a07575f81556001016109f4565b50505b505050565b815167ffffffffffffffff811115610a2957610a296105c4565b610a3d81610a37845461098b565b846109c3565b602080601f831160018114610a70575f8415610a595750858301515b5f19600386901b1c1916600185901b1785556103e4565b5f85815260208120601f198616915b82811015610a9e57888601518255948401946001909101908401610a7f565b5085821015610abb57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b606081525f610add606083018661086d565b8281036020840152610aef818661086d565b90508281036040840152610b03818561086d565b969550505050505056fea26469706673582212203391509e28ccd6d037a97f7047b9e3e6dd7062f485908ed7f002b243764e2e2e64736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 13,
        "contract": "contracts/OpkitDomains.sol:OpkitDomains",
        "label": "domains",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Domain)8_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Domain)8_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct OpkitDomains.Domain)",
        "numberOfBytes": "32",
        "value": "t_struct(Domain)8_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Domain)8_storage": {
        "encoding": "inplace",
        "label": "struct OpkitDomains.Domain",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/OpkitDomains.sol:OpkitDomains",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 7,
            "contract": "contracts/OpkitDomains.sol:OpkitDomains",
            "label": "stringRecords",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
          }
        ],
        "numberOfBytes": "64"
      }
    }
  }
}